class Solution {
public:
    int countPairs(vector<int>& nums, int k) {
        // This map will store value -> list of indices where it appears
        unordered_map<int, vector<int>> valueToIndices;

        // Step 1: Group indices by value
        for (int i = 0; i < nums.size(); ++i) {
            valueToIndices[nums[i]].push_back(i);
        }

        int count = 0;

        // Step 2: For each group of same values, find valid index pairs (i, j)
        for (auto& entry : valueToIndices) {
            vector<int>& indices = entry.second;

            // Loop through all pairs (i < j) within the same value group
            for (int i = 0; i < indices.size(); ++i) {
                for (int j = i + 1; j < indices.size(); ++j) {
                    // Check if product of indices is divisible by k
                    if ((indices[i] * indices[j]) % k == 0) {
                        count++;
                    }
                }
            }
        }

        return count; // Return total valid pairs
    }
};
