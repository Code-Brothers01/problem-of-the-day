class Solution {
public:
    int minOperations(vector<int>& nums) {
        int n = nums.size();  
        int operations = 0;  // Count of flip operations
        
        // Iterate through the array
        for (int i = 0; i < n; i++) {
            // If nums[i] is 0, we must flip it using a group of three
            if (nums[i] == 0) {
                // If we can't form a group of three, return -1 (impossible to make all 1s)
                if (i + 2 >= n) return -1;
                
                // Flip nums[i], nums[i+1], nums[i+2]
                nums[i] ^= 1;
                nums[i + 1] ^= 1;
                nums[i + 2] ^= 1;
                
                // Increment operation count
                operations++;
            }
        }
        
        return operations;  // Return the minimum number of operations required
    }
};
